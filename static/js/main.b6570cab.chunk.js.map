{"version":3,"sources":["CoreOperations.js","context/reducer.js","context/store.js","Utils.js","components/Button/Button.styled.js","components/Button/Button.js","components/Input/Input.styled.js","components/Input/Input.js","components/Layout/Layout.styled.js","components/Layout/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["Calculate","operation","input","secondInput","parseNumbers","pInput","pSecondInput","Add","Substract","Multiply","Divide","Error","parseFloat","StoreActions","doOperation","state","operationToDo","firstValue","secondValue","displayValue","result","StoreReducer","action","type","data","current","value","initialState","StoreContext","React","createContext","StoreProvider","children","useReducer","dispatch","Provider","ORANGE","GRAY","LIGHTGRAY","StyledButton","styled","button","props","active","bgColor","color","gridArea","Button","useContext","onClick","length","StyledInput","div","Input","data-testid","Intl","NumberFormat","undefined","maximumFractionDigits","format","amount","amountStr","toString","toFixed","substring","formatResult","StyledLayout","StyledInputLayout","StyledButtonsLayout","Layout","isActive","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6570cab.chunk.js","sourcesContent":["\nexport function Calculate(operation, input, secondInput) {\n    switch (operation) {\n        case '+':\n            return Add(input, secondInput)\n        case '-':\n            return Substract(input, secondInput)\n        case 'x':\n            return Multiply(input, secondInput)\n        case 'รท':\n            return Divide(input, secondInput)\n        default:\n            throw new Error('Invalid operation')\n    }\n}\n\nfunction Add(input, secondInput) {\n    const [pInput, pSecondInput] = parseNumbers(input, secondInput)\n    return pInput + pSecondInput\n}\n\nfunction Substract(input, secondInput) {\n    const [pInput, pSecondInput] = parseNumbers(input, secondInput)\n    return pInput - pSecondInput\n}\n\nfunction Multiply(input, secondInput) {\n    const [pInput, pSecondInput] = parseNumbers(input, secondInput)\n    return pInput * pSecondInput\n}\n\nfunction Divide(input, secondInput) {\n    const [pInput, pSecondInput] = parseNumbers(input, secondInput)\n    if (pSecondInput === 0)\n        return 'Error'\n    return pInput / pSecondInput\n}\n\nfunction parseNumbers(input, secondInput) {\n    const pInput = parseFloat(input)\n    const pSecondInput = parseFloat(secondInput)\n    return [pInput, pSecondInput]\n}\n\n","import { Calculate } from \"../CoreOperations\";\nimport { initialState } from \"./store\";\n\nexport const StoreActions = {\n    ADD: 'ADD',\n    SUBSTRACT: 'SUBSTRACT',\n    MULTIPLY: 'MULTIPLY',\n    DIVIDE: 'DIVIDE',\n    TAP: 'TAP',\n    CLEAR_ALL: 'CLEAR_ALL',\n    CLEAR: 'CLEAR',\n    RESULT: 'RESULT',\n}\n\nconst doOperation = (state, operationToDo) => {\n    const { firstValue, secondValue, displayValue } = state\n    if (firstValue !== '' && secondValue !== '') {\n        const result = Calculate(operationToDo, firstValue, secondValue)\n        return { ...state, operation: operationToDo, firstValue: result, secondValue: '', displayValue: result }\n    }\n    if (firstValue === '' && displayValue !== '') {\n        return { ...state, operation: operationToDo, firstValue: displayValue }\n    }\n    return { ...state, operation: operationToDo }\n}\n\nexport function StoreReducer(state, action) {\n    switch (action.type) {\n        case StoreActions.TAP: {\n            const { data } = action;\n            if (state.operation === '') {\n                const current = state.firstValue + data.value\n                return { ...state, firstValue: current, displayValue: current }\n            } else if (state.operation === '=') {\n                const current = data.value\n                return { ...state, firstValue: current, displayValue: current, operation: '' }\n            }\n            else {\n                if (state.firstValue === '') {\n                    const current = state.firstValue + data.value\n                    return { ...state, firstValue: current, displayValue: current }\n                } else {\n                    const current = state.secondValue + data.value\n                    return { ...state, secondValue: current, displayValue: current }\n                }\n            }\n        }\n        case StoreActions.ADD: {\n            return doOperation(state, '+')\n        }\n        case StoreActions.SUBSTRACT: {\n            return doOperation(state, '-')\n        }\n        case StoreActions.MULTIPLY: {\n            return doOperation(state, 'x')\n        }\n        case StoreActions.DIVIDE: {\n            return doOperation(state, 'รท')\n        }\n        case StoreActions.RESULT: {\n            const { operation, firstValue, secondValue } = state\n            if (firstValue === '' || secondValue === '')\n                return { ...state, operation: '=' }\n            const result = Calculate(operation, firstValue, secondValue)\n            return { ...state, displayValue: result, operation: '', firstValue: '', secondValue: '' }\n        }\n        case StoreActions.CLEAR: {\n            const { firstValue, secondValue } = state\n            if (secondValue !== '') {\n                return { ...state, displayValue: '', secondValue: '' }\n            }\n            if (firstValue !== '') {\n                return { ...state, displayValue: '', firstValue: '' }\n            }\n            break;\n        }\n        case StoreActions.CLEAR_ALL: {\n            return { ...initialState }\n        }\n        default: {\n            throw new Error(`Unhandled action type: ${action.type} `)\n        }\n    }\n}","import React, { useReducer } from 'react'\nimport { StoreReducer } from './reducer';\n\nexport const initialState = {\n    operation: '',\n    displayValue: '0',\n    firstValue: '',\n    secondValue: '',\n    result: '',\n}\n\nexport const StoreContext = React.createContext();\n\nexport const StoreProvider = ({children}) => {\n    const [state, dispatch] = useReducer(StoreReducer, initialState) \n    return (\n        <StoreContext.Provider value={{state, dispatch}}>\n            {children}\n        </StoreContext.Provider>\n    )\n}","export const ORANGE = '#FF9500'\nexport const GRAY = '#505050'\nexport const LIGHTGRAY = '#D4D4D2'","import styled from '@emotion/styled'\nimport { GRAY, ORANGE } from '../../Utils'\n\nexport const StyledButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100px;\n    width: 100px;\n    background-color: ${props => props.active ? 'white' : props.bgColor ? props.bgColor : GRAY};\n    border: solid 1px  ${props => props.active ? 'white' : props.bgColor ? props.bgColor : GRAY};\n    color: ${props => props.color ? props.color : props.active ? ORANGE : 'white'};\n    border-radius: 50%;\n    font-size: 2em;\n    ${({ gridArea }) => gridArea && `grid-area: ${gridArea}; border-radius: 60px; width: 100%; padding-right: 115px; `}\n    \n    &:active {\n        filter: brightness(120%);\n    }\n    &:focus {\n        outline: 0;\n    }\n`","import { useContext } from \"react\"\nimport { StoreActions } from \"../../context/reducer\"\nimport { StoreContext } from \"../../context/store\"\nimport { StyledButton } from \"./Button.styled\"\n\nconst Button = ({ value, ...props }) => {\n    const { dispatch, state } = useContext(StoreContext)\n\n    const handleClick = () => {\n        switch (value) {\n            case 'AC': {\n                dispatch({ type: StoreActions.CLEAR_ALL })\n                break\n            }\n            case 'C': {\n                dispatch({ type: StoreActions.CLEAR })\n                break\n            }\n            case 'ยฑ': {\n                break\n            }\n            case '%': {\n                break\n            }\n            case 'รท': {\n                dispatch({ type: StoreActions.DIVIDE })\n                break\n            }\n            case 'x': {\n                dispatch({ type: StoreActions.MULTIPLY })\n                break\n            }\n            case '-': {\n                dispatch({ type: StoreActions.SUBSTRACT })\n                break\n            }\n            case '+': {\n                dispatch({ type: StoreActions.ADD })\n                break\n            }\n            case '=': {\n                dispatch({ type: StoreActions.RESULT })\n                break\n            }\n            default: {\n                //this is the limit on the iOS calculator\n                if (state.displayValue.length === 9 && state.operation === '') {\n                    return\n                }\n                if (state.displayValue.length === 9 && state.operation !== '' && state.secondValue !== '') {\n                    return\n                }\n                dispatch({ type: StoreActions.TAP, data: { value } })\n                break\n            }\n        }\n\n    }\n\n    return <StyledButton onClick={handleClick} {...props}>\n        {value}\n    </StyledButton>\n}\n\nexport default Button","import styled from '@emotion/styled'\n\nexport const StyledInput = styled.div`\n    font-size: 75px;\n    color: white;\n`","import { useContext } from \"react\"\nimport { StoreContext } from \"../../context/store\"\nimport { StyledInput } from \"./Input.styled\"\n\nconst Input = () => {\n    const { state } = useContext(StoreContext)\n\n    const formatResult = (amount) => {\n        if (!amount)\n            return\n\n        let amountStr = amount.toString()\n        if (amount < 0) {\n            if (amountStr.length > 10) {\n                return amount.toFixed(10)\n            }\n        } else {\n            if (amountStr.length > 9) {\n                return +amountStr.substring(0, 9)\n            }\n        }\n        return amount\n    }\n\n    return <StyledInput data-testid=\"calculator-input\">\n        {state.displayValue !== 'Error' ? new Intl.NumberFormat(undefined, { maximumFractionDigits: 12 }).format(formatResult(state.displayValue)) : state.displayValue}\n    </StyledInput>\n}\n\nexport default Input","import styled from '@emotion/styled'\n\nexport const StyledLayout = styled.div`\n    display: grid;\n    grid-template-rows: 1fr 2fr;\n    background-color:black;\n    min-width: 375px;\n    height: 812px;\n    padding: 15px 20px;\n`\nexport const StyledInputLayout = styled.div`\n    display: flex;\n    align-items: flex-end;\n    justify-content: flex-end;\n`\n\nexport const StyledButtonsLayout = styled.div`\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-gap: 15px;\n    width: 100%;\n    height: 100%;\n    grid-template-areas:    \". . . .\"\n                            \". . . .\"\n                            \". . . .\"\n                            \". . . .\"\n                            \"cero cero . .\"\n`","import { useContext } from \"react\"\nimport { StoreContext } from \"../../context/store\"\nimport { GRAY, LIGHTGRAY, ORANGE } from \"../../Utils\"\nimport Button from \"../Button/Button\"\nimport Input from \"../Input/Input\"\nimport { StyledButtonsLayout, StyledInputLayout, StyledLayout } from \"./Layout.styled\"\n\nconst Layout = () => {\n    const { state } = useContext(StoreContext)\n    const getClearBtnValue = () => {\n        if (state.firstValue !== '') {\n            return 'C'\n        } else {\n            return 'AC'\n        }\n    }\n    const isActive = (operation) => {\n        return state.operation === operation && state.secondValue === ''\n    }\n\n    return <StyledLayout data-testid=\"layout\">\n        <StyledInputLayout data-testid=\"input-layout\">\n            <Input />\n        </StyledInputLayout>\n        <StyledButtonsLayout data-testid=\"buttons-layout\">\n            <Button color={GRAY} bgColor={LIGHTGRAY} value={getClearBtnValue()} />\n            <Button color={GRAY} bgColor={LIGHTGRAY} value={'ยฑ'} />\n            <Button color={GRAY} bgColor={LIGHTGRAY} value={'%'} />\n            <Button bgColor={ORANGE} value={'รท'} active={isActive('รท')} />\n            <Button value={'7'} />\n            <Button value={'8'} />\n            <Button value={'9'} />\n            <Button bgColor={ORANGE} value={'x'} active={isActive('x')} />\n            <Button value={'4'} />\n            <Button value={'5'} />\n            <Button value={'6'} />\n            <Button bgColor={ORANGE} value={'-'} active={isActive('-')} />\n            <Button value={'1'} />\n            <Button value={'2'} />\n            <Button value={'3'} />\n            <Button bgColor={ORANGE} value={'+'} active={isActive('+')} />\n            <Button value={'0'} gridArea={'cero'} />\n            <Button value={'.'} />\n            <Button bgColor={ORANGE} value={'='} />\n        </StyledButtonsLayout>\n    </StyledLayout>\n}\n\nexport default Layout","import Layout from \"./components/Layout/Layout\";\nimport { StoreProvider } from \"./context/store\";\n\nconst App = () => (\n  <StoreProvider>\n    <Layout/>\n  </StoreProvider>\n)\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}